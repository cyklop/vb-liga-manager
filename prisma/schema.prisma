generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Team {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  location        String?
  hallAddress     String?
  trainingTimes   String?
  leagueId        Int?
  league          League?   @relation(fields: [leagueId], references: [id])
  users           User[]
  teamLeader      User?     @relation("TeamLeader", fields: [teamLeaderId], references: [id])
  teamLeaderId    Int?      @unique

  homeFixtures Fixture[] @relation("HomeTeam") // Relation for fixtures where this team is home
  awayFixtures Fixture[] @relation("AwayTeam") // Relation for fixtures where this team is away
}

model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique
  password     String
  name         String
  isAdmin      Boolean @default(false)
  isSuperAdmin Boolean @default(false)
  teamId       Int?
  team         Team?   @relation(fields: [teamId], references: [id])
  leadingTeam  Team?   @relation("TeamLeader")
}

model League {
  id                Int       @id @default(autoincrement())
  name              String    @unique
  numberOfTeams     Int
  hasReturnMatches  Boolean
  teams             Team[]
  fixtures          Fixture[]
}

model Fixture {
  id           Int       @id @default(autoincrement())
  leagueId     Int
  league       League    @relation(fields: [leagueId], references: [id], onDelete: Cascade) // Cascade delete fixtures if league is deleted
  round        Int?      // Optional round number
  matchday     Int?      // Optional matchday number
  homeTeamId   Int
  homeTeam     Team      @relation("HomeTeam", fields: [homeTeamId], references: [id], onDelete: Cascade) // Prevent fixture if team is deleted? Or set null? Cascade for now.
  awayTeamId   Int
  awayTeam     Team      @relation("AwayTeam", fields: [awayTeamId], references: [id], onDelete: Cascade)
  fixtureDate  DateTime? // Optional date and time of the fixture
  homeScore    Int?      // Optional score
  awayScore    Int?      // Optional score
  order        Int       // For manual sorting

  @@index([leagueId])
  @@index([homeTeamId])
  @@index([awayTeamId])
}
